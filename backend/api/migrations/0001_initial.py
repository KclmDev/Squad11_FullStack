# Generated by Django 5.2.7 on 2025-10-15 20:59

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='ModeloDocumento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('cargo', models.CharField(choices=[('cliente', 'Cliente'), ('gerente', 'Gerente'), ('admin', 'Admin'), ('superadmin', 'Super Admin')], default='cliente', max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Projeto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_do_projeto', models.CharField(max_length=255)),
                ('tipo_do_projeto', models.CharField(choices=[('RESIDENCIAL', 'Residencial'), ('COMERCIAL', 'Comercial')], max_length=50)),
                ('data_entrega', models.DateField()),
                ('descricao', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('PENDENTE', 'Pendente'), ('APROVADO', 'Aprovado'), ('REPROVADO', 'Reprovado')], default='PENDENTE', max_length=20)),
                ('data_criacao', models.DateTimeField(auto_now_add=True)),
                ('data_atualizacao', models.DateTimeField(auto_now=True)),
                ('responsavel', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='projetos_criados', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Projeto',
                'verbose_name_plural': 'Projetos',
            },
        ),
        migrations.CreateModel(
            name='Log',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('acao', models.CharField(choices=[('CRIACAO', 'Criação'), ('APROVACAO', 'Aprovação'), ('REPROVACAO', 'Reprovação'), ('EDICAO', 'Edição'), ('LOGIN', 'Login')], max_length=20)),
                ('motivo', models.TextField(blank=True, null=True)),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('projeto', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='api.projeto')),
            ],
            options={
                'verbose_name': 'Log',
                'verbose_name_plural': 'Logs',
            },
        ),
        migrations.CreateModel(
            name='Ambiente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome_do_ambiente', models.CharField(max_length=100)),
                ('guia_de_cores', models.CharField(blank=True, max_length=255)),
                ('piso', models.TextField(blank=True)),
                ('parede', models.TextField(blank=True)),
                ('teto', models.TextField(blank=True)),
                ('rodape', models.TextField(blank=True)),
                ('soleira', models.TextField(blank=True)),
                ('peitoril', models.TextField(blank=True)),
                ('esquadria', models.TextField(blank=True)),
                ('vidro', models.TextField(blank=True)),
                ('porta', models.TextField(blank=True)),
                ('ferragem', models.TextField(blank=True)),
                ('inst_eletrica', models.TextField(blank=True, verbose_name='Instalação Elétrica')),
                ('inst_comunicacao', models.TextField(blank=True, verbose_name='Instalação de Comunicação')),
                ('projeto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambientes', to='api.projeto')),
            ],
            options={
                'verbose_name': 'Ambiente',
                'verbose_name_plural': 'Ambientes',
            },
        ),
    ]
